{{- define "brouteringress" -}}
{{- if .ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-{{ .name }}-ingress
  namespace: {{ .Release.Namespace }}
{{- if and .ingress.tls.enabled .ingress.tls.issuer }}
  annotations:
    cert-manager.io/cluster-issuer: {{ .ingress.tls.issuer }}
{{ end }}
spec:
  ingressClassName: {{ .ingress.ingress_class }}
  rules:
    - host: {{ .ingress.host }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Release.Name }}-{{ .name }}-service
                port:
                  number: {{ .ingress.port }}
            path: {{ .ingress.path }}
            pathType: Prefix
{{- if .ingress.tls.enabled }}
  tls:
    - hosts:
      - {{ .ingress.host }}
      secretName: {{ .ingress.tls.secret }}
{{ end }}
{{ end }}
{{- end }}

{{- if .Values.brouter.enabled }}
{{- include "brouteringress" (dict "Release" .Release "ingress" (merge .Values.brouter.ingress .Values.ingress) "name" "brouter") -}}
{{- end }}
{{- if .Values.brouter_web.enabled }}
{{- include "brouteringress" (dict "Release" .Release "ingress" (merge .Values.brouter_web.ingress .Values.ingress) "name" "brouter-web") -}}
{{- end }}
{{- if .Values.brouter_react.enabled }}
{{- include "brouteringress" (dict "Release" .Release "ingress" (merge .Values.brouter_react.ingress .Values.ingress) "name" "brouter-react") -}}
{{- end }}
